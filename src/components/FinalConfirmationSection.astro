<section>
  <div class="container">
    <svg xmlns:xlink="http://www.w3.org/1999/xlink" id="canvas">
      <defs>
        <g id="heart">
          <g>
            <g>
              <path
                class="o_heart"
                d="M102.7,12.4L102.7,12.4C90.5,0.2,71.3-1,57.7,8.8c-13.6-9.9-32.9-8.7-45.2,3.5l0,0
                                   c-13.6,13.6-13.6,35.8,0,49.3L48.8,98c1.8,1.8,4,2.9,6.3,3.3c3.9,0.9,8.2-0.1,11.2-3.2l36.3-36.3C116.2,48.2,116.2,26,102.7,12.4
                                   z"
              ></path>
            </g>
          </g>
          <g>
            <g>
              <path
                class="i_heart"
                d="M74.7,34L74.7,34c-4.6-4.6-11.9-5.1-17.1-1.4c-5.2-3.8-12.5-3.3-17.1,1.3c-5.1,5.1-5.1,13.6,0,18.7
                                   l13.8,13.8c0.7,0.7,1.5,1.1,2.4,1.3c1.5,0.3,3.1-0.1,4.2-1.2l13.8-13.8C79.9,47.6,79.9,39.2,74.7,34z"
              ></path>
            </g>
          </g>
        </g>
      </defs>
    </svg>

    <span class="text typography">Ven√≠s?</span>
    <div class="responses">
      <a
        href="https://wa.me/+5401133651498/?text=Genial!%20Cont%C3%A1%20conmigo%20Isu."
        class="rounded typography animate__animated animate__pulse">SI</a
      >
      <a
        href="https://wa.me/+5401133651498/?text=Perd%C3%B3n%20Isu,%20no%20puedo."
        class="rounded typography animate__animated animate__pulse">NO</a
      >
    </div>
  </div>
</section>

<style>
  .container {
    position: relative;
  }

  .responses {
    display: flex;
    justify-content: space-around;
    width: 100%;
    font-size: 3rem;

    position: absolute;
    top: 60%;
  }

  .rounded {
    text-decoration: none;
    width: 5rem;
    text-align: center;
    background-color: white;
    border: 3px solid #fce3e9;
    border-radius: 50%;
    padding: 10px 20px;
    cursor: pointer;

    animation-iteration-count: infinite;
  }

  .rounded:first-child {
    animation-delay: 0.5s;
  }

  #canvas {
    background: #ff93a6;
    position: absolute;
    width: 100%;
    height: 100%;
  }

  .o_heart {
    fill: #ffb3c3;
  }
  .i_heart {
    fill: #fce3e9;
  }

  .text {
    z-index: 1000;
    position: absolute;
    font-size: 3.5em;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    background: white;
    padding: 10px 20px;
    border-radius: 5px;
    border: 3px solid #fce3e9;
    box-shadow: 0 5px 6px rgba(0, 0, 0, 0.1);
  }

  .arrow_container {
    width: 100%;
    height: 100px;
    position: fixed;
    border: 1px solid black;
    z-index: 1000;
    bottom: 15px;
    left: 0px;
  }
</style>

<script>
  import * as d3 from "d3";
  // @ts-ignore
  import gsap from "gsap";

  // SVG HEART ANIMATION USING d3 and GSAP
  const paper = d3.select("#canvas");
  const canvas = document.querySelector("#canvas");
  const { width: wsvg, height: hsvg } = canvas?.getBoundingClientRect() || {
    width: 0,
    height: 0,
  };

  let d = Math.ceil((Math.floor(Math.random() * 700) + 100) / 10) * 10;
  let count = 0;

  function rNumTime() {
    d = Math.ceil((Math.floor(Math.random() * 600) + 100) / 10) * 100;
  }

  setInterval(function () {
    count++;
    const x = Math.floor(Math.random() * (wsvg - 100)) + 50;
    const y = Math.floor(Math.random() * (hsvg - 100)) + 50;
    const b = paper
      .append("use")
      .attr("xlink:href", "#heart")
      .attr("id", "h" + count)
      .attr("transform", "translate(" + x + ", " + y + ")");
    setTimeLine();
    rNumTime();
  }, d / 2);

  function setTimeLine() {
    const scale = (Math.random() * (0.7 - 0.2) + 0.5).toFixed(1);
    let heart = document.querySelector("#h" + count);

    const tl = gsap.timeline({ repeat: 1, yoyo: true });

    tl.to(heart, { duration: 0.7, scale: 0, transformOrigin: "50% 50%" })
      .to(heart, { duration: 0.7, scale, transformOrigin: "50% 50%" })
      .to(heart, {
        duration: 0.3,
        scale: 1,
        transformOrigin: "50% 50%",
        opacity: 0,
      });

    // Tried an onComplete here but it wasn't working properly, this was just the easier know-how
    setTimeout(function () {
      if (heart) remove(heart);
    }, 1700);
  }

  function remove(h: Element) {
    h.remove();
  }

  // $(window).on("resize", function () {
  //   wsvg = $("#canvas").width();
  //   hsvg = $("#canvas").height();
  // });
</script>
